1，多线程CAS原理
当对一个共享内存的变量进行修改时，判断此变量的值是否为预期值，对则修改，否则不进行修改。
2，多线程CAS原理的缺点
a,ABA问题
当变量被另外一个线程多次修改成预期值。解决方案：加入版本号。版本号加预期值一起判断。
b,CPU开销过大
当线程很多时，CPU要不断判断预期值，造成消耗过大。
c，两个共享变量的判断不能使用CAS ？


2,CAP理论

2.1 Consistency 完成写操作之后,其他任何操作都能取到写操作的最新的值。各节点保持每时每刻数据的一致性.

2.2 Availability 一直可以做正常的读写操作.从用户看来就是不会出现系统访问失败或者超时的问题

2.3 Partition Tolerance ;当某个节点或者网路分区出现错误时,不影响整体的使用


3,动态代理

3.1 JDK动态代理


3.2 ciglib动态代理







