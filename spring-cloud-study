spring-cloud 服务治理
eureka
consul
zookeeper

==================================================================

==========================spring-cloud 服务消费者的负载均衡=======================================
1,ribbon
消费者方法上加上@LoadBanlance注解
  return restTemplate.getForEntity("http://eureka-provider/", String.class).getBody();


2,@FeignClient(value=[实现接口所在应用的spring.application.name 也是向注册中心注册的服务名字])


总体说明
feign消费服务时，以GET方式请求的条件：
如果想让服务消费者采用GET方式调用服务提供者，那么需要：

服务消费者这边feign调用时，在所有参数前加上@RequestParam注解。
服务消费者这边feign调用时，指明为GET方式（注:如果不指明method,那么在条件1满足的情况下，采用的是默认的GET方式）。
注：这里条件1和条件2，是“且”的关系(都满足时，才为GET)。

feign消费服务时，以POST方式请求的条件：
如果想让服务消费者采用POST方式调用服务提供者，那么只需要：

服务消费者这边feign调用时，在所有参数前加上@RequestParam注解，并指明feign消费服务的方式为POST。
服务消费者这边feign调用时，有且只有一个参数前为@RequestBody或什么也没有（如果有多个参数，那么其余参数前必须有@RequestParam）。
注：这里条件1和条件2，是“或”的关系（当至少一个满足时，即为POST）。

注：在服务消费者中，使用feign消费服务时，如果参数前什么也不写，那么默认是由@RequestBody指明的。

即：只要不满足GET方式请求，那么POST方式请求是一定支持的。

下面进行详细说明
无参：
服务消费者以GET方式请求消费服务的情况(示例)：



不指定method,则默认为get，等同于



服务消费者以POST方式请求消费服务的情况(示例)：



单参：
服务消费者以GET方式请求消费服务的情况(示例)：

参数前使用了@RequestParam,且指明了用GET方式



等同于(当所有参数前都有@RequestParam时，这时不指明method，则默认为采用GET方式)：



服务消费者以POST方式请求消费服务的情况(示例)：

参数前使用了@RequestParam,且指明了用POST方式


参数前未使用@RequestParam或参数前使用了@RequestBody注解(此时不论是否手动指定请求方式、不论指定的方式是POST还是GET，那么最终都以POST方式消费服务)








注：在服务消费者中，使用feign消费服务时，如果参数前什么也不写，那么默认是由@RequestBody指明的。

注：@RequestBody注解的参数，需要POST方式才能传递数据。

注：在服务提供者的Controller中，

如果要接收(服务消费中传过来的)被@RequestBody指明的参数，那么对应方法的对应参数前一定要有@RequestBody；(如果没有的话，收到的参数值就为null;如果写成@RequestParam的话，那么feign调用会失败)
如果要接收(服务消费中传过来的)被@RequestParam指明的参数，那么可以写@RequestParam，也可以不写(当服务提供者中对应的参数名字与服务消费者传过来的参数名字一致时，可以不写，不一致时，需要写)
多参：
服务消费者以GET方式请求消费服务的情况(示例)：

如果想让服务消费者采用GET方式调用服务提供者，那么需要：

服务消费者这边feign调用时，在所有参数前加上@RequestParam注解。
服务消费者这边feign调用时，指明为GET方式（注:如果不指明method,那么在条件1满足的情况下，默认采用的也是GET方式）。


等同于



服务消费者以POST方式请求消费服务的情况(示例)：

       多参数时，如果服务消费者想采用POST进行feign调用，那么：服务消费者中该接口方法里的这些参数前，最多只能有一个参数是@RequestBody指明的，其余的参数必须使用@RequestParam指明。

如:



等同于（String name 这个参数前什么也不写，那么默认的即为@RequestBody）



如果服务消费者这边feign调用时,所有参数前面都使用了@RequestParam注解时,但是指明的是POST方式，那么最终还是以POST方式进行的：



服务提供者接收时：
如果服务消费者传过来参数时，全都用的是@RequestParam的话，那么服务提供者的Controller中对应参数前可以写@RequestParam,也可以不写(当两边参数名字一致时，可以省略不写)
如果服务消费者传过来参数时，有@RequestBody的话，那么服务提供者的Controller中对应参数前必须要写@RequestBody(如果是多参数的话，其余参数前视情况可以写@RequestParam,也可以不写)
       注意：如果接口与接口的实现分别处于两个服务中，那么接口就相当于服务消费者，而接口的实现则相当于服务提供者。两者之间仍然满足本文上所述要求。如：

服务消费者中的接口是这样的：



那么对应的服务提供者中的Controller应该是这样的：


==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
==================================================================
